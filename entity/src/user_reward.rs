//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "user_reward")]
pub struct Model {
    pub fee_user_id: i64,
    pub reward_user_id: i64,
    pub fee_id:i64,
    pub reward: Decimal,
    pub create_time: DateTime,
    pub status: Status,
    #[sea_orm(primary_key)]
    pub id: i64,
}
#[derive(
    Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Default, Deserialize, Serialize,
)]
#[sea_orm(rs_type = "String", db_type = "String(StringLen::N(8))")]
pub enum Status{
    #[sea_orm(string_value = "Pending")]
    #[default]
    Pending,
    #[sea_orm(string_value = "Success")]
    Success
}


#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
